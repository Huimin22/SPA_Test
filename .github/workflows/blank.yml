name: Build and Deploy SPA

on:
  schedule:
    - cron: 0 8 * * * 
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Repository
        uses: actions/checkout@v4
        with:
          repository: 'Huimin22/SPA_APP'

      - name: Checkout Infra Repository
        uses: actions/checkout@v4
        with:
          repository: 'Huimin22/SPA_Infra'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Launch Temporary EC2
          run: |
            INSTANCE_ID=$(aws ec2 run-instances \
              --image-id ami-xxxxxxxxxxxxxxxxx \
              --instance-type t2.micro \
              --key-name devop \
              --security-group-ids sg-xxxxxxxx \
              --subnet-id subnet-xxxxxxxx \
              --associate-public-ip-address \
              --query 'Instances[0].InstanceId' \
              --output text)
            echo "Temporary EC2 Instance ID: $INSTANCE_ID"
            echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
            sleep 30

      - name: Add SSH
          run: |
          echo "${{ secrets.SSH_KEY }}" > devop.pem
          chmod 400 devop.pem

      - name: Get EC2 IP
          run: |
            PUBLIC_IP=$(aws ec2 describe-instances --instance-ids ${{ env.INSTANCE_ID }} \
            --query 'Reservations[0].Instances[0].PublicDnsName' \
            --output text)
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      - name: Run on EC2 and Run Smoke Tests
          run: |
            ssh -o StrictHostKeyChecking=no -i devop.pem ec2-user@$PUBLIC_IP << EOF
            sudo yum install git -y
            sudo yum install -y docker
            sudo service docker start
            sudo chkconfig docker on
            sudo usermod -aG docker ec2-user
            sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            newgrp docker
            git --version
            docker --version
            docker-compose version
            sudo dnf install -y mariadb105
            mysql --version

            git clone $SOURCE_REPO app
            cd app
            mysql -h ${{ secrets.RDS_ENDPOINT }} -P 3306 -u ${{ secrets.RDS_USERNAME }} -p"${{ secrets.RDS_PASSWORD }}" ${{ secrets.RDS_DBNAME }} < db_init.sql
            
            export DB_HOST="${{ secrets.RDS_ENDPOINT }}"
            export DB_USER="${{ secrets.RDS_USERNAME }}"
            export DB_PASSWORD="${{ secrets.RDS_PASSWORD }}"
            export DB_NAME="${{ secrets.RDS_DBNAME }}"
          
            docker-compose -f docker-compose-prod.yml up -d
            sleep 10
            
            curl -f http://localhost:5173/ || exit 1
          EOF



      - name: Create and Push Images to ECR


      - name: Deploy to QA EC2




      - name: Terminate Temporary EC2
        if: always()
        run: |
          aws ec2 terminate-instances --instance-ids $INSTANCE_ID




